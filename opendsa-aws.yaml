AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template Rails_Single_Instance: Create a Ruby on
  Rails stack using a single EC2 instance with a local MySQL database for
  storage. This template demonstrates using the AWS CloudFormation bootstrap
  scripts to install the packages and files necessary to deploy a Rails
  application. This example creates a simple hello world application from the
  template. **WARNING** This template creates an Amazon EC2 instance. You will
  be billed for the AWS resources used if you create a stack from this template.
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Default: opendsa2
  DBName:
    Default: MyDatabase
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    NoEcho: 'true'
    Description: Username for MySQL database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
    Default: DBUser
  DBPassword:
    NoEcho: 'true'
    Description: Password MySQL database access
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
    Default: DBPassword
  DBRootPassword:
    NoEcho: 'true'
    Description: Root password for MySQL
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
    Default: DBRootPassword
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
    ConstraintDescription: must be a valid EC2 instance type.
  SSHLocation:
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Mappings:
  AWSRegionArch2AMI:
    us-east-1:
      HVM64: ami-0ac80df6eff0e70b5
    us-west-2:
      HVM64: ami-053bc2e89490c5ab7
    us-west-1:
      HVM64: ami-0d705db840ec5f0c5
    eu-west-1:
      HVM64: ami-089cc16f7f08c4457
    eu-west-2:
      HVM64: ami-00f6a0c18edb19300
    eu-west-3:
      HVM64: ami-0e11cbb34015ff725
    eu-central-1:
      HVM64: ami-0d359437d1756caa8
    eu-north-1:
      HVM64: ami-0f920d75f0ce2c4bb
    ap-southeast-1:
      HVM64: ami-063e3af9d2cc7fe94
    ap-southeast-2:
      HVM64: ami-0bc49f9283d686bab
    ap-south-1:
      HVM64: ami-02d55cb47e83a99a0
    us-east-2:
      HVM64: ami-0a63f96e85105c6d3

Resources:
  WebServer:
    Type: 'AWS::EC2::Instance'
    # Metadata:
    #   'AWS::CloudFormation::Init':
    #     configSets:
    #       full_install:
    #         - install_cfn
    #         - install_ruby_2_3_1
    #         - install_mysql
    #         - configure_mysql
    #         - install_application
    #     install_cfn:
    #       files:
    #         /etc/cfn/cfn-hup.conf:
    #           content: !Join 
    #             - ''
    #             - - |
    #                 [main]
    #               - stack=
    #               - !Ref 'AWS::StackId'
    #               - |+

    #               - region=
    #               - !Ref 'AWS::Region'
    #               - |+

    #           mode: '000400'
    #           owner: root
    #           group: root
    #         /etc/cfn/hooks.d/cfn-auto-reloader.conf:
    #           content: !Join 
    #             - ''
    #             - - |
    #                 [cfn-auto-reloader-hook]
    #               - |
    #                 triggers=post.update
    #               - |
    #                 path=Resources.WebServer.Metadata.AWS::CloudFormation::Init
    #               - 'action=/opt/aws/bin/cfn-init -v '
    #               - '         --stack '
    #               - !Ref 'AWS::StackName'
    #               - '         --resource WebServer '
    #               - '         --configsets full_install '
    #               - '         --region '
    #               - !Ref 'AWS::Region'
    #               - |+

    #               - |
    #                 runas=root
    #           mode: '000400'
    #           owner: root
    #           group: root
    #       services:
    #         sysvinit:
    #           cfn-hup:
    #             enabled: 'true'
    #             ensureRunning: 'true'
    #             files:
    #               - /etc/cfn/cfn-hup.conf
    #               - /etc/cfn/hooks.d/cfn-auto-reloader.conf
    #     install_ruby_2_3_1:
    #       files:
    #         /tmp/install_ruby:
    #           content: !Join 
    #             - |+

    #             - - '#!/bin/bash'
    #               - 'curl -sSL https://get.rvm.io | bash'
    #               - source /etc/profile.d/rvm.sh
    #               - rvm install 2.3.1
    #               - rvm --default use 2.3.1
    #               - gem install rails
    #           mode: '000500'
    #           owner: root
    #           group: root
    #       commands:
    #         01_install_ruby:
    #           command: /tmp/install_ruby > /var/log/install_ruby.log
    #     install_mysql:
    #       packages:
    #         yum:
    #           mysql: []
    #           mysql-server: []
    #           mysql-devel: []
    #           mysql-libs: []
    #       files:
    #         /tmp/setup.mysql:
    #           content: !Join 
    #             - ''
    #             - - CREATE USER '
    #               - !Ref DBUser
    #               - '''@''localhost'' IDENTIFIED BY '''
    #               - !Ref DBPassword
    #               - |
    #                 ';
    #               - 'GRANT ALL ON '
    #               - !Ref DBName
    #               - .* TO '
    #               - !Ref DBUser
    #               - |
    #                 '@'localhost';
    #               - |
    #                 FLUSH PRIVILEGES;
    #           mode: '000400'
    #           owner: root
    #           group: root
    #       services:
    #         sysvinit:
    #           mysqld:
    #             enabled: 'true'
    #             ensureRunning: 'true'
    #     configure_mysql:
    #       commands:
    #         01_set_mysql_root_password:
    #           command: !Join 
    #             - ''
    #             - - mysqladmin -u root password '
    #               - !Ref DBRootPassword
    #               - ''''
    #           test: !Join 
    #             - ''
    #             - - '$(mysql '
    #               - !Ref DBName
    #               - ' -u root --password='''
    #               - !Ref DBRootPassword
    #               - ''' >/dev/null 2>&1 </dev/null); (( $? != 0 ))'
    #         02_create_database:
    #           command: !Join 
    #             - ''
    #             - - mysql -u root --password='
    #               - !Ref DBRootPassword
    #               - ''' < /tmp/setup.mysql'
    #           test: !Join 
    #             - ''
    #             - - '$(mysql '
    #               - !Ref DBName
    #               - ' -u root --password='''
    #               - !Ref DBRootPassword
    #               - ''' >/dev/null 2>&1 </dev/null); (( $? != 0 ))'
    #         03_cleanup:
    #           command: rm /tmp/setup.mysql
    #     install_application:
    #       files:
    #         /tmp/database.yml:
    #           content: !Join 
    #             - ''
    #             - - |
    #                 development:
    #               - |2
    #                   adapter: mysql2
    #               - |2
    #                   encoding: utf8
    #               - |2
    #                   reconnect: false
    #               - |2
    #                   pool: 5
    #               - '  database: '
    #               - !Ref DBName
    #               - |+

    #               - '  username: '
    #               - !Ref DBUser
    #               - |+

    #               - '  password: '
    #               - !Ref DBPassword
    #               - |+

    #               - |2
    #                   socket: /var/lib/mysql/mysql.sock
    #           mode: '000400'
    #           owner: root
    #           group: root
    #         /tmp/install_application:
    #           content: !Join 
    #             - ''
    #             - - |
    #                 #!/bin/bash -e
    #               - |
    #                 source /etc/profile.d/rvm.sh
    #               - |
    #                 rvm use 2.3.1
    #               - |
    #                 export HOME=/home/ec2-user
    #               - |
    #                 export PATH=$PATH:/usr/local/bin
    #               - |
    #                 cd /home/ec2-user
    #               - |
    #                 # Kill the rails server if it is running to allow update
    #               - |
    #                 if pgrep ruby &> /dev/null ; then pkill -TERM ruby ; fi
    #               - |
    #                 # This sample template creates a new application inline
    #               - |
    #                 # Typically you would use files and/or sources to download
    #               - >
    #                 # your application package and perform any configuration
    #                 here.
    #               - >
    #                 # Create a new application, with therubyracer javascript
    #                 library
    #               - >
    #                 rails new sample -d mysql --skip-spring --skip-bundle
    #                 --force
    #               - |
    #                 cd /home/ec2-user/sample
    #               - |
    #                 sed -i 's/^# \(.*therubyracer.*$\)/\1/' Gemfile
    #               - |
    #                 bundle install
    #               - |
    #                 # Create a sample scoffold
    #               - |
    #                 rails generate scaffold Note title:string body:text --force
    #               - |
    #                 # Configure the database connection
    #               - |
    #                 mv /tmp/database.yml config
    #               - |
    #                 rake db:create db:migrate
    #           mode: '000500'
    #           owner: root
    #           group: root
    #         /home/ec2-user/start-application:
    #           content: !Join 
    #             - ''
    #             - - |
    #                 #!/bin/bash -e
    #               - |
    #                 source /etc/profile.d/rvm.sh
    #               - |
    #                 rvm use 2.3.1
    #               - |
    #                 export HOME=/home/ec2-user
    #               - |
    #                 export PATH=$PATH:/usr/local/bin
    #               - |
    #                 cd /home/ec2-user/sample
    #               - |
    #                 # Startup the application
    #               - |
    #                 rails server --binding 0.0.0.0 -p 80 -d
    #           mode: '000500'
    #           owner: root
    #           group: root
    #       commands:
    #         01_install_application:
    #           command: /tmp/install_application > /var/log/install_application.log
    #         02_configure_reboot:
    #           command: echo /home/ec2-user/start-application >> /etc/rc.local
    #         03_start_application:
    #           command: /home/ec2-user/start-application
    #         04_cleanup:
    #           command: rm /tmp/install_application
    Properties:
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - HVM64 
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      KeyName: !Ref KeyName
    #   UserData: !Base64 
    #     'Fn::Join':
    #       - ''
    #       - - |
    #           #!/bin/bash -xe
    #         - |
    #           yum update -y aws-cfn-bootstrap
    #         - '/opt/aws/bin/cfn-init -v '
    #         - '         --stack '
    #         - !Ref 'AWS::StackId'
    #         - '         --resource WebServer '
    #         - '         --configsets full_install '
    #         - '         --region '
    #         - !Ref 'AWS::Region'
    #         - |+

    #         - '/opt/aws/bin/cfn-signal -e $? '
    #         - '         --stack '
    #         - !Ref 'AWS::StackId'
    #         - '         --resource WebServer '
    #         - '         --region '
    #         - !Ref 'AWS::Region'
    #         - |+
    # CreationPolicy:
    #   ResourceSignal:
    #     Timeout: PT30M
        
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP and SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
Outputs:
  WebsiteURL:
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - WebServer
          - PublicDnsName
        - /notes
    Description: URL for newly created Rails application
